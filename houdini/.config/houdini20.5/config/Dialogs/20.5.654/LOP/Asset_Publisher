// Magic: b619cac0
// Automatically generated PSI dialog (PSI version 20.5.654)
// Thu Jul 24 11:50:42 2025


f_tmp = FLOAT_FIELD;	// dialog.top.ui

sepparm.gad = 

{

    LAYOUT(vertical) HSTRETCH

    { HEIGHT(0.070590) }
}
name.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
  HMARGIN(0.18, 0.1) NO_MARGIN_SPACING_SCALE

name.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) 
    {  }

    name.label = PARM_LABEL_SIMPLE("Asset", "name") WIDTH(1.5);
    { WIDTH(0.09) }

    name.menu;

    {  }

    {  }
}

reload.gad = ROW
{
    JUSTIFY(left, center)
    {  }

    PARM_BUTTON("reload", "Reload")
	push VALUE(reload.val);

    {  }
}
}	// Template join.bot


sepparm5.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}
toggle_override.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
  HMARGIN(0.18, 0.1) NO_MARGIN_SPACING_SCALE

toggle_override.gad = ROW
{
    
    {  }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("toggle_override", "Override") toggle VALUE(toggle_override.val);

    {  }

    {  }
}

override.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) 
    {  }

    override.menu;

    {  }

    {  }
}

branch.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) 
    {  }

    branch.menu;

    {  }

    {  }
}
}	// Template join.bot


sepparm7.gad = 

{

    LAYOUT(vertical) HSTRETCH

    { HEIGHT(0.070590) }
}

sepparm6.gad = 

{

    LAYOUT(vertical) HSTRETCH

    { HEIGHT(0.070590) }
}
debug.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
  HMARGIN(0.18, 0.1) NO_MARGIN_SPACING_SCALE

debug.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) 
    {  }

    debug.label = PARM_LABEL_SIMPLE("Error View", "debug") WIDTH(1.5);
    { WIDTH(0.09) }

    debug.menu;

    {  }

    {  }
}

transparency.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 {  }

 transparency.label = PARM_LABEL("Transparency", "transparency") ;
 PARM(float, 1, "transparency", none, none) RANGE(0,1)
	LOCK_RANGE LABELREF(transparency.label) HSTRETCH;

  {  }
}
}	// Template join.bot


sepparm10.gad = 

{

    LAYOUT(vertical) HSTRETCH

    { HEIGHT(0.070590) }
}

sepparm3.gad = 

{

    LAYOUT(vertical) HSTRETCH

    { HEIGHT(0.070590) }
}
proxy_type.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
  HMARGIN(0.18, 0.1) NO_MARGIN_SPACING_SCALE

proxy_type.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) 
    {  }

    proxy_type.label = PARM_LABEL_SIMPLE("Proxy Generation", "proxy_type") WIDTH(1.5);
    { WIDTH(0.09) }

    proxy_type.menu;

    {  }

    {  }
}

proxy_quality.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 {  }

 PARM(float, 1, "proxy_quality", none, none) RANGE(0,1)
	LOCK_RANGE HSTRETCH;

  {  }
}
}	// Template join.bot


proxy_color.gad = 
{
    LAYOUT (horizontal) HSTRETCH
    { WIDTH(0.18) }

    proxy_color.label = PARM_LABEL("Proxy Color", "proxy_color") WIDTH(1.5);
    PARM(float, 4, "proxy_color", none, COLOR, "R,G,B,A") 
	LABELREF(proxy_color.label) HSTRETCH;

    { WIDTH(0.1) }
}

sepparm4.gad = 

{

    LAYOUT(vertical) HSTRETCH

    { HEIGHT(0.070590) }
}

sepparm9.gad = 

{

    LAYOUT(vertical) HSTRETCH

    { HEIGHT(0.070590) }
}
subd.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
  HMARGIN(0.18, 0.1) NO_MARGIN_SPACING_SCALE

subd.gad = ROW
{
    
    {  }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("subd", "Subdivide") toggle VALUE(subd.val);

    {  }

    {  }
}

centre.gad = ROW
{
    HSTRETCH
    {  }

    PARM_BUTTON("centre", "Centre") toggle VALUE(centre.val);

    { HSTRETCH }

    {  }
}
}	// Template join.bot


sepparm12.gad = 

{

    LAYOUT(vertical) HSTRETCH

    { HEIGHT(0.070590) }
}

rest_frame.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 rest_frame.label = PARM_LABEL("Rest Frame", "rest_frame") WIDTH(1.5);
 PARM(integer, 1, "rest_frame", none, none) RANGE(1001,1101)
	 LABELREF(rest_frame.label) HSTRETCH;

  { WIDTH(0.1) }
}

frame_range.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   frame_range.label = PARM_LABEL("Frame Range", "frame_range") WIDTH(1.5);
   PARM(integer, 2, "frame_range", none, none, "X,Y")
	RANGE(-1,1)  LABELREF(frame_range.label)
	HSTRETCH;

    { WIDTH(0.1) }
}

sepparm11.gad = 

{

    LAYOUT(vertical) HSTRETCH

    { HEIGHT(0.070590) }
}
publish_all.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
  HMARGIN(0.18, 0.1) NO_MARGIN_SPACING_SCALE

publish_all.gad = ROW
{
    JUSTIFY(left, center)
    {  }

    { WIDTH(1.5) }
    { WIDTH(0.1) }

    PARM_BUTTON("publish_all", "Local Publish")
	push VALUE(publish_all.val);

    {  }
}

farm_cache.gad = ROW
{
    JUSTIFY(left, center)
    {  }

    PARM_BUTTON("farm_cache", "Farm Publish")
	push VALUE(farm_cache.val);

    {  }
}

flush_frames.gad = ROW
{
    
    {  }

    PARM_BUTTON("flush_frames", "Flush Frames") toggle VALUE(flush_frames.val);

    {  }

    {  }
}
}	// Template join.bot

version.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
  HMARGIN(0.18, 0.1) NO_MARGIN_SPACING_SCALE

version.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 {  }

 version.label = PARM_LABEL("Version", "version") WIDTH(1.5);
 PARM(integer, 1, "version", none, none) RANGE(0,10)
	 LABELREF(version.label) HSTRETCH;

  {  }
}

store_override.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    {  }

    store_override.label = PARM_LABEL("Override", "store_override") ;
    PARM_FIELD(string, "store_override") VALUE(store_override.val) 
	LABELREF(store_override.label) HSTRETCH;

    {  }
}

init.gad = ROW
{
    
    {  }

    PARM_BUTTON("init", "Init") toggle VALUE(init.val);

    {  }

    {  }
}
}	// Template join.bot


caching.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("caching", "Caching") toggle VALUE(caching.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}
proxy_publish.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
  HMARGIN(0.18, 0.1) NO_MARGIN_SPACING_SCALE

proxy_publish.gad = ROW
{
    JUSTIFY(left, center)
    {  }

    { WIDTH(1.5) }
    { WIDTH(0.1) }

    PARM_BUTTON("proxy_publish", "Publish Proxy")
	push VALUE(proxy_publish.val);

    {  }
}

model_publish.gad = ROW
{
    JUSTIFY(left, center)
    {  }

    PARM_BUTTON("model_publish", "Publish Model")
	push VALUE(model_publish.val);

    {  }
}

anim_publish.gad = ROW
{
    JUSTIFY(left, center)
    {  }

    PARM_BUTTON("anim_publish", "Publish Animation")
	push VALUE(anim_publish.val);

    {  }
}

mat_publish.gad = ROW
{
    JUSTIFY(left, center)
    {  }

    PARM_BUTTON("mat_publish", "Publish Materials")
	push VALUE(mat_publish.val);

    {  }
}
}	// Template join.bot


branch_ver_publish.gad = ROW
{
    JUSTIFY(left, center)
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.1) }

    PARM_BUTTON("branch_ver_publish", "Publish Branch Version")
	push VALUE(branch_ver_publish.val);

    { WIDTH(0.1) }
}

sepparm2.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}
reload_proxy.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
  HMARGIN(0.18, 0.1) NO_MARGIN_SPACING_SCALE

reload_proxy.gad = ROW
{
    JUSTIFY(left, center)
    {  }

    { WIDTH(1.5) }
    { WIDTH(0.1) }

    PARM_BUTTON("reload_proxy", "Reload Proxy")
	push VALUE(reload_proxy.val);

    {  }
}

reload_model.gad = ROW
{
    JUSTIFY(left, center)
    {  }

    PARM_BUTTON("reload_model", "Reload Model")
	push VALUE(reload_model.val);

    {  }
}

reload_anim.gad = ROW
{
    JUSTIFY(left, center)
    {  }

    PARM_BUTTON("reload_anim", "Reload Anim")
	push VALUE(reload_anim.val);

    {  }
}

reload_mat.gad = ROW
{
    JUSTIFY(left, center)
    {  }

    PARM_BUTTON("reload_mat", "Reload Mat")
	push VALUE(reload_mat.val);

    {  }
}
}	// Template join.bot


reload_branch.gad = ROW
{
    JUSTIFY(left, center)
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.1) }

    PARM_BUTTON("reload_branch", "Reload Branch")
	push VALUE(reload_branch.val);

    { WIDTH(0.1) }
}

sepparm8.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}

farm_execute.gad = ROW
{
    JUSTIFY(left, center)
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.1) }

    PARM_BUTTON("farm_execute", "Farm Execute")
	push VALUE(farm_execute.val);

    { WIDTH(0.1) }
}

asset_name.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    { WIDTH(0.18) }

    asset_name.label = PARM_LABEL("Store Name", "asset_name") WIDTH(1.5);
    PARM_FIELD(string, "asset_name") VALUE(asset_name.val) 
	LABELREF(asset_name.label) HSTRETCH;

    { WIDTH(0.1) }
}

mat_path.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
 { WIDTH(0.18) }

 mat_path.label = PARM_LABEL("Material Path", "mat_path") WIDTH(1.5);

 PARM_FIELD (pathstring, "mat_path") LABELREF(mat_path.label)
	VALUE(mat_path.val) HSTRETCH;

    mat_path.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

 ACTION_ICONBUTTON "BUTTONS_chooser_file" VALUE(mat_path.plus) LOOKFLAT
    HELP("Open floating file chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

 { WIDTH(0.1) }
}

model_path.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
 { WIDTH(0.18) }

 model_path.label = PARM_LABEL("Model Path", "model_path") WIDTH(1.5);

 PARM_FIELD (pathstring, "model_path") LABELREF(model_path.label)
	VALUE(model_path.val) HSTRETCH;

    model_path.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

 ACTION_ICONBUTTON "BUTTONS_chooser_file" VALUE(model_path.plus) LOOKFLAT
    HELP("Open floating file chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

 { WIDTH(0.1) }
}

anim_path.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
 { WIDTH(0.18) }

 anim_path.label = PARM_LABEL("Animation Path", "anim_path") WIDTH(1.5);

 PARM_FIELD (pathstring, "anim_path") LABELREF(anim_path.label)
	VALUE(anim_path.val) HSTRETCH;

    anim_path.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

 ACTION_ICONBUTTON "BUTTONS_chooser_file" VALUE(anim_path.plus) LOOKFLAT
    HELP("Open floating file chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

 { WIDTH(0.1) }
}

proxy_path.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
 { WIDTH(0.18) }

 proxy_path.label = PARM_LABEL("Proxy Path", "proxy_path") WIDTH(1.5);

 PARM_FIELD (pathstring, "proxy_path") LABELREF(proxy_path.label)
	VALUE(proxy_path.val) HSTRETCH;

    proxy_path.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

 ACTION_ICONBUTTON "BUTTONS_chooser_file" VALUE(proxy_path.plus) LOOKFLAT
    HELP("Open floating file chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

 { WIDTH(0.1) }
}

branch_path.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
 { WIDTH(0.18) }

 branch_path.label = PARM_LABEL("Branch Path", "branch_path") WIDTH(1.5);

 PARM_FIELD (pathstring, "branch_path") LABELREF(branch_path.label)
	VALUE(branch_path.val) HSTRETCH;

    branch_path.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

 ACTION_ICONBUTTON "BUTTONS_chooser_file" VALUE(branch_path.plus) LOOKFLAT
    HELP("Open floating file chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

 { WIDTH(0.1) }
}

branch_ver_path.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
 { WIDTH(0.18) }

 branch_ver_path.label = PARM_LABEL("Branch Version Path", "branch_ver_path") WIDTH(1.5);

 PARM_FIELD (pathstring, "branch_ver_path") LABELREF(branch_ver_path.label)
	VALUE(branch_ver_path.val) HSTRETCH;

    branch_ver_path.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

 ACTION_ICONBUTTON "BUTTONS_chooser_file" VALUE(branch_ver_path.plus) LOOKFLAT
    HELP("Open floating file chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

 { WIDTH(0.1) }
}

backend.gad = 
{
    LAYOUT(vertical) HSTRETCH

    TABDIALOG2 flat "backend.gad"
    { 
	VALUE(backend.gad.val) STRETCH(1,0)
    } 
}

publish.gad = 

GROUP simple "Publish" flat 
{ 
    VALUE(publish.gad.val) LAYOUT(vertical) HSTRETCH 
	    sepparm9.gad;		
	    subd.row.join;		
	    sepparm12.gad;		
	    rest_frame.gad;		
	    frame_range.gad;		
	    sepparm11.gad;		
	    publish_all.row.join;		
} 

proxy.gad = 

GROUP simple "Proxy" flat 
{ 
    VALUE(proxy.gad.val) LAYOUT(vertical) HSTRETCH 
	    sepparm3.gad;		
	    proxy_type.row.join;		
	    proxy_color.gad;		
	    sepparm4.gad;		
} 

view.gad = 

GROUP simple "View" flat 
{ 
    VALUE(view.gad.val) LAYOUT(vertical) HSTRETCH 
	    sepparm6.gad;		
	    debug.row.join;		
	    sepparm10.gad;		
} 

dialog_norm.gad = 
{
    LAYOUT(vertical) SPACING(0.02) HSTRETCH 
    sepparm.gad; 
    name.row.join; 
    sepparm5.gad; 
    toggle_override.row.join; 
    sepparm7.gad; 
    view.gad; 
    proxy.gad; 
    publish.gad; 
} 
// dialog.bot.ui

extrastuffstowbar_minimize.val := 1;

dialog = OPENNOTIFIER
{
    LAYOUT(vertical) SPACING(0.02) LOOK(bg) VALUE(open.val_) HSTRETCH

    { HEIGHT(1p) LOOK(bg) HSTRETCH }

    dialog_norm.gad;
}
