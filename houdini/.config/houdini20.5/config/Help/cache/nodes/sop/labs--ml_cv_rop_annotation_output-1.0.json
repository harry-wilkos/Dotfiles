{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "labs::ml_cv_rop_annotation_output::1.0", "icon": "/labs_icons/sidefxlabs_default.svg", "since": "20.5", "version": "1.0", "namespace": "labs"}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Labs ML CV ROP Annotation Output"], "extent": [144, 181]}, {"type": "summary", "indent": 0, "text": ["Outputs a ground truth JSON per frame and then aggregates them all into a COCO JSON file for the full dataset."], "extent": [181, 301]}, {"type": "para", "indent": 0, "text": ["This node takes a scene with all its Metadata, Labels, and Synth Attributes and outputs a ground truth JSON per frame, then aggregates the per frame JSON files into a single ", {"scheme": null, "value": "https://cocodataset.org/#home", "type": "link", "text": ["COCO JSON"], "exists": true}, " file for the full dataset."], "extent": [301, 545]}, {"type": "warning_group", "body": [{"type": "warning", "indent": 0, "role": "item", "extent": [545, 554], "body": [{"type": "para", "indent": 4, "text": ["Compute keypoint visibility can be inconsistent if the points are on top of each other."], "extent": [554, 647]}], "container": true}], "container": true, "role": "item_group"}, {"type": "box_group", "body": [{"ext": null, "type": "box", "indent": 0, "role": "item", "extent": [647, 653], "body": [{"type": "para", "indent": 4, "text": ["The original ML Computer Vision tools were developed by the Synthetic Data team at Endava PLC."], "extent": [682, 783]}], "container": true, "attrs": {"display": "raised yellow"}}], "container": true, "role": "item_group"}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [783, 795], "body": [{"level": 2, "id": null, "container": true, "type": "h", "indent": 4, "text": ["General"], "extent": [795, 814], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Partition By"], "extent": [814, 833], "body": [{"type": "para", "indent": 8, "text": ["Uses Connectivity to loop through objects to generate JSON."], "extent": [858, 935]}, {"type": "para", "indent": 8, "text": ["Piece:"], "extent": [935, 963]}, {"type": "para", "indent": 8, "text": ["3D Connectivity:"], "extent": [963, 1001]}], "container": true, "attrs": {"id": "partitionby"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Piece Elements"], "extent": [1001, 1021], "body": [{"type": "para", "indent": 8, "text": ["Specifies the class of attribute to use for defining pieces in the ", {"type": "code", "text": ["for each"]}, " loop within this node."], "extent": [1040, 1158]}, {"type": "para", "indent": 8, "text": ["Primitives:"], "extent": [1158, 1191]}, {"type": "para", "indent": 8, "text": ["Points:"], "extent": [1191, 1220]}], "container": true, "attrs": {"id": "class"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Piece Attribute"], "extent": [1220, 1241], "body": [{"type": "para", "indent": 8, "text": ["Specifies the name of the attribute to use for defining pieces in the ", {"type": "code", "text": ["for each"]}, " loop within this node."], "extent": [1264, 1385]}], "container": true, "attrs": {"id": "pieceattr"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Visualize IDs"], "extent": [1385, 1404], "body": [{"type": "para", "indent": 8, "text": ["Toggles random color assignment to visualize the assignment of IDs."], "extent": [1423, 1508]}], "container": true, "attrs": {"id": "visid"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Visualize"], "extent": [1508, 1523], "body": [{"type": "para", "indent": 8, "text": ["Changes between visualizing Instance IDs or Category IDs."], "extent": [1540, 1615]}], "container": true, "attrs": {"id": "vis"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Dome Camera LOP Path"], "extent": [1615, 1641], "body": [{"type": "para", "indent": 8, "text": ["Specifies the Houdini path to the LOP node from which the camera primitive is retrieved."], "extent": [1662, 1768]}], "container": true, "attrs": {"id": "loppath"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Camera Primitive"], "extent": [1768, 1790], "body": [{"type": "para", "indent": 8, "text": ["Specifies the USD primitive path pointing to the camera (used to get screen space)."], "extent": [1812, 1913]}], "container": true, "attrs": {"id": "primpath"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Compute Object Screen Percentage"], "extent": [1913, 1951], "body": [{"type": "para", "indent": 8, "text": ["Enables ground truth defining what percentage of each object is visible to the camera."], "extent": [1972, 2076]}], "container": true, "attrs": {"id": "compvis"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Resolution Multiplier"], "extent": [2076, 2103], "body": [{"type": "para", "indent": 8, "text": ["Adjusts the precision level for calculating the Visibility Percentage"], "extent": [2124, 2211]}], "container": true, "attrs": {"id": "resmult"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Visualize Object Screen Percentage"], "extent": [2211, 2251], "body": [{"type": "para", "indent": 8, "text": ["Previews the calculation of visibility percentage"], "extent": [2280, 2347]}], "container": true, "attrs": {"id": "visobjscreenpct"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Use VDB Keypoint Visibility"], "extent": [2347, 2380], "body": [{"type": "para", "indent": 8, "text": ["Converts objects to VDB before calculating visibility. This is sometimes useful for closely layered objects."], "extent": [2400, 2526]}], "container": true, "attrs": {"id": "usevdb"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 4, "text": ["Pack Geometry"], "extent": [2526, 2552], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Group"], "extent": [2552, 2564], "body": [{"type": "para", "indent": 8, "text": ["A subset of points in the input geometry to run the program on. Leave this blank to affect all points in the input."], "extent": [2583, 2716]}], "container": true, "attrs": {"id": "group"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Group Type"], "extent": [2716, 2732], "body": [{"type": "para", "indent": 8, "text": ["What the group is made of (point, vertex, primitive etc)."], "extent": [2755, 2830]}, {"type": "para", "indent": 8, "text": ["Guess from Group:"], "extent": [2830, 2869]}, {"type": "para", "indent": 8, "text": ["Breakpoints:"], "extent": [2869, 2903]}, {"type": "para", "indent": 8, "text": ["Edges:"], "extent": [2903, 2931]}, {"type": "para", "indent": 8, "text": ["Points:"], "extent": [2931, 2960]}, {"type": "para", "indent": 8, "text": ["Primitives:"], "extent": [2960, 2993]}], "container": true, "attrs": {"id": "grouptype"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Delete Unused Groups"], "extent": [2993, 3019], "body": [{"type": "para", "indent": 8, "text": ["Deletes any geometry that does not belong to a group listed above."], "extent": [3042, 3126]}], "container": true, "attrs": {"id": "removegrp"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 4, "text": ["Output Attributes"], "extent": [3126, 3156], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Auto Add Existing Synth Attributes"], "extent": [3156, 3197], "body": [{"type": "para", "indent": 8, "text": ["Finds existing synth attributes in the scene geometry and build a multiparm element for each one."], "extent": [3224, 3331]}], "container": true, "attrs": {"id": "attrfrominput"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Synth Attributes"], "extent": [3331, 3353], "body": [{"type": "para", "indent": 8, "text": ["The number of synthetic attributes."], "extent": [3376, 3429]}], "container": true, "attrs": {"id": "synthattr"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 4, "text": ["Synth Attributes"], "extent": [3429, 3458], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Synth Attribute"], "extent": [3458, 3480], "body": [{"type": "para", "indent": 8, "text": ["Name of the synth attribute to be exported to COCO JSON."], "extent": [3504, 3578]}], "container": true, "attrs": {"id": "synthattr#"}, "role": "item"}], "container": true, "role": "item_group"}]}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 4, "text": ["PDG"], "extent": [3578, 3592], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Export JSON"], "extent": [3592, 3610], "body": [{"type": "para", "indent": 8, "text": ["Exports the ground truth JSON for the active frame/work item. This button is generally executed using a ROP Fetch in a ", {"type": "code", "text": ["ROP Synthetic Data TOP"]}, " node."], "extent": [3631, 3798]}], "container": true, "attrs": {"id": "execute"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Aggregate JSON"], "extent": [3798, 3818], "body": [{"type": "para", "indent": 8, "text": ["Consolidates all individual frame JSON files into a single COCO JSON file for the entire dataset. This button is generally executed using a ROP Fetch in a ", {"type": "code", "text": ["ROP Synthetic Data TOP"]}, " node."], "extent": [3841, 4044]}], "container": true, "attrs": {"id": "aggregate"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Frame Number"], "extent": [4044, 4062], "body": [{"type": "para", "indent": 8, "text": ["The number of the current frame. defaults to ", {"type": "code", "text": ["@frame_index"]}, ", an attribute created by the ROP Synthetic Data  TOP."], "extent": [4084, 4215]}], "container": true, "attrs": {"id": "framenum"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Camera Resolution"], "extent": [4215, 4238], "body": [{"type": "para", "indent": 8, "text": ["Specifies the camera resolution. Defaults to @res, a PDG attribute created by the ROP Synthetic Data TOP."], "extent": [4258, 4381]}], "container": true, "attrs": {"id": "camres"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Output Path"], "extent": [4381, 4398], "body": [{"type": "para", "indent": 8, "text": ["Specifies the location of the dataset directory. By default, this calls an attribute created by the ", {"type": "code", "text": ["ROP Synthetic Data"]}, " TOP node."], "extent": [4422, 4570]}], "container": true, "attrs": {"id": "outputpath"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Filename"], "extent": [4570, 4584], "body": [{"type": "para", "indent": 8, "text": ["Path and filename pattern specifying where per dataset frames should be rendered and what they should be named."], "extent": [4606, 4735]}], "container": true, "attrs": {"id": "filename"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["JSON Path"], "extent": [4735, 4750], "body": [{"type": "para", "indent": 8, "text": ["Path and filename pattern specifying where per image JSONs should be generated and what they should be named."], "extent": [4772, 4899]}], "container": true, "attrs": {"id": "fullpath"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["COCO Path"], "extent": [4899, 4914], "body": [{"type": "para", "indent": 8, "text": ["Path and filename pattern specifying the location where the aggregated ", {"scheme": null, "value": "https://cocodataset.org/#home", "type": "link", "text": ["COCO JSON"], "exists": true}, " file for the dataset should be generated and what it should be named."], "extent": [4935, 5132]}], "container": true, "attrs": {"id": "aggpath"}, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}, {"level": 1, "id": "examples", "container": true, "type": "examples_section", "indent": 0, "role": "section", "extent": [5132, 5142], "body": [{"type": "tip_group", "body": [{"type": "tip", "indent": 4, "role": "item", "extent": [5142, 5152], "body": [{"type": "para", "indent": 8, "text": ["When viewing in Houdini\u2019s Help Browser, please copy the example file\u2019s URL to a regular browser to proceed with the download."], "extent": [5152, 5287]}], "container": true}], "container": true, "role": "item_group"}, {"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": null, "value": "https://github.com/sideeffects/SideFXLabsExamples/blob/main/examples/ml_computer_vision/ml_computer_vision.1.0.zip", "type": "link", "text": ["Example File"], "exists": true}], "extent": [5287, 5425]}], "container": true}], "text": "Examples"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [5425, 5433], "body": [], "text": "Related"}], "title": ["Labs ML CV ROP Annotation Output"], "summary": ["Outputs a ground truth JSON per frame and then aggregates them all into a COCO JSON file for the full dataset."]}